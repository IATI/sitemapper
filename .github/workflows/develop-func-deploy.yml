name: Deploy_To_Dev_Function_On_Push

on:
  workflow_dispatch:
  push:
    paths-ignore: # https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#filter-pattern-cheat-sheet
      - '**/README.md' # don't run on README.md file updates anywhere in repo
      - '**/dependabot.yml'
    branches:
      - develop
  schedule: # ensures dependabot updates are deployed to dev at least daily
    - cron: '17 04 * * *' # 0417am daily

env:
  STAGE: dev # suffix to indicate environment stage
  NAME: func-iati-sitemapper
  AZURE_FUNCTIONAPP_PACKAGE_PATH: '.' # set this to the path to your web app project, defaults to the repository root
  SOLR_API_URL: ${{ secrets.DEV_SOLR_API_URL }}
  SOLR_USER: ${{ secrets.DEV_SOLR_USER }}
  SOLR_PASSWORD: ${{ secrets.DEV_SOLR_PASSWORD }}
  DDS_FRONTEND_URL: ${{ secrets.DEV_DDS_FRONTEND_URL }}
  REDIS_HOSTNAME: ${{ secrets.DEV_REDIS_HOSTNAME }}
  REDIS_PORT: ${{ secrets.REDIS_PORT }}
  REDIS_KEY: ${{ secrets.DEV_REDIS_KEY }}
  KV_URI: ${{ secrets.DEV_KV_URI }}
  VALIDATOR_FRONTEND_URL: ${{ secrets.DEV_VALIDATOR_FRONTEND_URL }}
  VALIDATOR_SERVICES_API_URL: ${{ secrets.DEV_VALIDATOR_SERVICES_URL }}
  VALIDATOR_SERVICES_API_KEY_NAME: ${{ secrets.DEV_VALIDATOR_SERVICES_KEY_NAME }}
  VALIDATOR_SERVICES_API_KEY_VALUE: ${{ secrets.DEV_VALIDATOR_SERVICES_KEY_VALUE }}

jobs:
  should_run:
    uses: IATI/.github/.github/workflows/should_run.yaml@main

  build-deploy:
    needs: should_run
    if: ${{ needs.should_run.outputs.should_run == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v2.4.0

      - name: 'Setup Node Environment'
        uses: actions/setup-node@v2.5.1
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: 'Resolve Project Dependencies Using Npm'
        shell: bash
        run: |
          npm i -g npm
          pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
          npm set-script prepare ""
          npm ci --production
          popd

      - name: 'Login via Azure CLI'
        uses: azure/login@v1.4.3
        with:
          creds: ${{ secrets.DEV_AZURE_CREDENTIALS }} # Service Principal credentials saved in GitHub Secrets

      - name: Set Env variables for connecting to DSS API instance
        uses: Azure/appservice-settings@v1.1.1
        with:
          app-name: ${{env.NAME}}-${{env.STAGE}}
          app-settings-json: |
            [
                {
                    "name": "WEBSITE_NODE_DEFAULT_VERSION",
                    "value": "~16",
                    "slotSetting": false
                },
                {
                    "name": "SOLR_API_URL",
                    "value": "${{ env.SOLR_API_URL }}",
                    "slotSetting": false
                },
                {
                    "name": "SOLR_USER",
                    "value": "${{ env.SOLR_USER }}",
                    "slotSetting": false
                },
                {
                    "name": "SOLR_PASSWORD",
                    "value": "${{ env.SOLR_PASSWORD }}",
                    "slotSetting": false
                },
                {
                    "name": "DDS_FRONTEND_URL",
                    "value": "${{ env.DDS_FRONTEND_URL }}",
                    "slotSetting": false
                },
                {
                    "name": "REDIS_HOSTNAME",
                    "value": "${{ env.REDIS_HOSTNAME }}",
                    "slotSetting": false
                },
                {
                    "name": "REDIS_KEY",
                    "value": "${{ env.REDIS_KEY }}",
                    "slotSetting": false
                },
                {
                    "name": "REDIS_PORT",
                    "value": "${{ env.REDIS_PORT }}",
                    "slotSetting": false
                },
                {
                    "name": "AzureWebJobsSecretStorageType",
                    "value": "keyvault",
                    "slotSetting": false
                },
                {
                    "name": "AzureWebJobsSecretStorageKeyVaultUri",
                    "value": "${{ env.KV_URI }}",
                    "slotSetting": false
                },
                {
                    "name": "VALIDATOR_FRONTEND_URL",
                    "value": "${{ env.VALIDATOR_FRONTEND_URL }}",
                    "slotSetting": false
                },
                {
                    "name": "VALIDATOR_SERVICES_API_URL",
                    "value": "${{ env.VALIDATOR_SERVICES_API_URL }}",
                    "slotSetting": false
                },
                {
                    "name": "VALIDATOR_SERVICES_API_KEY_NAME",
                    "value": "${{ env.VALIDATOR_SERVICES_API_KEY_NAME }}",
                    "slotSetting": false
                },
                {
                    "name": "VALIDATOR_SERVICES_API_KEY_VALUE",
                    "value": "${{ env.VALIDATOR_SERVICES_API_KEY_VALUE }}",
                    "slotSetting": false
                }
            ]

      - name: 'Run Azure Functions Action'
        uses: Azure/functions-action@v1.4.4
        with:
          app-name: ${{ env.NAME }}-${{ env.STAGE }}
          package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}

  integration-test:
    needs: build-deploy
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v2.4.0

      - name: 'Install newman'
        run: |
          sudo npm i -g newman

      - name: 'Run integration tests' # Update -e environment file with an environment that points to your deployed instance
        run: |
          newman run integration-tests/func-iati-sitemapper.postman_collection.json -e integration-tests/envs/develop.postman_environment.json --working-dir integration-tests/test-files

  # Mark status checks success/fail on dependabot commits for scheduled deploys
  status_check_success:
    needs: [build-deploy, integration-test]
    if: success() && github.event_name == 'schedule'
    uses: IATI/.github/.github/workflows/status_check_success.yaml@main

  status_check_failure:
    needs: [build-deploy, integration-test]
    if: failure() && github.event_name == 'schedule'
    uses: IATI/.github/.github/workflows/status_check_failure.yaml@main
